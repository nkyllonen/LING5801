!######################################################################
!# Nikki Kyllonen
!# LING 5801 - Spring 2020
!# 
!# Assignment 2: Finite-State computational morphology with XFST
!######################################################################

### Here are regular expressions for classes of things like vowels and
### consonants to use in later expressions.

define Vowel [a|e|i|o|u|I] ;
define Consonant [b|c|d|f|g|h|j|k|l|m|n|p|q|r|s|t|v|w|x|y|z] ;

### Create an FST that contains the Finnish noun stems (see finnish_nouns.txt).
read text finnish_stems
define RegNounStem

### Create an FST that relates underlying Number and Case values to
### their surface realizations and concatenate it with the FST for the
### noun stems. Number values and +Sg, +Pl and Case values are +Nom,
### +Part. In the end you should have an FST called FinnishNouns that
### relates forms like "maa+Pl+Part" to "maaITa".

# map to null since could end a word or attach to case
define Sing %+Sg:0 ;

define Plural %+Pl:0 ;

# map to literal hashtag -- end of word boundary since cases end words
define Nominative %+Nom:%# ; 

define Partitive %+Part:## ;

# monosyllabic noun stems
define MonoSyllStem [ {puu} | {maa} | {suo} ]

# bisyllabic noun stems # TODO: set to RegNounStem - (RegNounStem.intersection(MonosyllStem))
define BiSyllStem [ {tikka} | {pappi} | {kukka} | {tutti} | {kauppa} |
                    {kuoppa} | {jalka} | {linko} | {sopu} | {kampa} |
                    {piispa} | {vahti} | {ilta} | {sota} ]

### Implement rules for realizing underlying forms correctly and compose them in the correct order.



### Push your final RE "FinishNouns" onto the stack, ready for use.


